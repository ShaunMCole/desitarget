#!/usr/bin/env python

from __future__ import print_function, division

import sys
import numpy as np
import fitsio

from desitarget import io
from desitarget.cuts import select_targets
from desitarget.brightmask import mask_targets
from desitarget.QA import _parse_tcnames

from time import time
start = time()

#import warnings
#warnings.simplefilter('error')

import multiprocessing
nproc = multiprocessing.cpu_count() // 2
nside = io.desitarget_nside()

from desiutil.log import get_logger
log = get_logger()

from argparse import ArgumentParser
ap = ArgumentParser(description='Generates DESI SV target bits from Legacy Surveys sweeps or tractor files')
ap.add_argument("src", 
                help="Tractor/sweeps file or root directory with tractor/sweeps files")
ap.add_argument("dest", 
                help="Output target selection file")
ap.add_argument('-m', "--mask", 
                help="If sent then mask the targets, the name of the mask file should be supplied")
ap.add_argument("--numproc", type=int,
                help='number of concurrent processes to use [defaults to {}]'.format(nproc),
                default=nproc)
ap.add_argument('-t','--tcnames', default=None, 
                help="Comma-separated names of target classes to run (e.g. QSO,LRG). Options are ELG, QSO, LRG, MWS, BGS, STD. Default is to run everything)")
ap.add_argument('-i','--iteration', default="1", 
                help="Iteration of SV target selection to run [defaults to 1 for 'sv1']")

ns = ap.parse_args()
infiles = io.list_sweepfiles(ns.src)
if len(infiles) == 0:
    infiles = io.list_tractorfiles(ns.src)
if len(infiles) == 0:
    log.critical('no sweep or tractor files found')
    sys.exit(1)

survey='sv'+ns.iteration

# ADM Only coded for objects with Gaia matches
# ADM (e.g. DR6 or above). Fail for earlier Data Releases.
# ADM Guard against a single file being passed.
fn = infiles
if ~isinstance(infiles, str):
    fn = infiles[0]
data = fitsio.read(fn, columns=["RELEASE","PMRA"])
if np.any(data["RELEASE"] < 6000):
    log.critical('Commissioning cuts only coded for DR6 or above')
    raise ValueError
if (np.max(data['PMRA']) == 0.) & np.any(data["RELEASE"] < 7000):
    d = "/project/projectdirs/desi/target/gaia_dr2_match_dr6"
    log.info("Zero objects have a proper motion.")
    log.critical(
        "Did you mean to send the Gaia-matched sweeps in, e.g., {}?"
        .format(d)
    )
    raise IOError

log.info("running on {} processors".format(ns.numproc))

#ADM if specific bit names were passed, use them, otherwise run all target classes
tcnames = _parse_tcnames(tcstring=ns.tcnames, add_all=False)

targets = select_targets(infiles, numproc=ns.numproc, tcnames=tcnames, survey=survey)
if ns.mask:
    targets = mask_targets(targets, inmaskfile=ns.mask, nside=nside)

io.write_targets(ns.dest, targets, indir=ns.src, survey=survey,
                 qso_selection=survey, nside=nside)

log.info('{} targets written to {}...t={:.1f}s'.format(len(targets), ns.dest, time()-start))
